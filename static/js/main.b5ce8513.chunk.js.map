{"version":3,"sources":["App.jsx","index.js"],"names":["goodsFromServer","App","state","selectedGoods","good","this","setState","filter","currentGood","message","length","lastElement","mainPartOfMessage","slice","join","className","type","onClick","map","isSelected","some","key","Math","random","classNames","removeGood","addGood","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sPAIMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAkGaC,E,4MA9FbC,MAAQ,CACNC,cAAe,I,6CAGjB,SAAQC,GACNC,KAAKC,UAAS,gBAAGH,EAAH,EAAGA,cAAH,MAAwB,CACpCA,cAAc,GAAD,mBAAMA,GAAN,CAAqBC,U,wBAItC,SAAWA,GACTC,KAAKC,UAAS,kBAAwB,CACpCH,cADY,EAAGA,cACcI,QAAO,SAAAC,GAAW,OAC7CA,IAAgBJ,W,oBAKtB,WAAU,IAAD,OACCD,EAAkBE,KAAKH,MAAvBC,cACJM,EAAU,qBAEd,GAA6B,IAAzBN,EAAcO,OAChBD,EAAO,UAAMN,EAAc,GAApB,sBACF,GAAIA,EAAcO,OAAS,EAAG,CACnC,IAAMC,EAAcR,EAAcA,EAAcO,OAAS,GACnDE,EAAoBT,EACvBU,MAAM,EAAGV,EAAcO,OAAS,GAChCI,KAAK,MAERL,EAAO,UAAMG,EAAN,gBAA+BD,EAA/B,kBAGT,OACE,yBAAKI,UAAU,OACb,sDAAwBN,IACxB,4BACEO,KAAK,SACLD,UAAU,cACVE,QAAS,WACP,EAAKX,SAAS,CAAEH,cAAe,OAJnC,KASA,wBAAIY,UAAU,aACXf,EAAgBkB,KAAI,SAACd,GACpB,IAAMe,EAAahB,EAAciB,MAAK,SAAAZ,GAAW,OAC/CA,IAAgBJ,KAGlB,OACE,wBAAIiB,IAAKC,KAAKC,SAAUR,UAAU,aAChC,0BACEA,UACES,IACE,YAAa,CAAE,sBAAuBL,KAIzCf,GAEDe,EAaE,4BACEH,KAAK,SACLD,UAAU,cACVE,QAAS,WACP,EAAKQ,WAAWrB,KAJpB,UAXA,4BACEY,KAAK,SACLD,UAAU,+BACVE,QAAS,WACP,EAAKS,QAAQtB,KAJjB,iB,GAjEFuB,IAAMC,WCbxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.b5ce8513.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    selectedGoods: [],\n  }\n\n  addGood(good) {\n    this.setState(({ selectedGoods }) => ({\n      selectedGoods: [...selectedGoods, good],\n    }));\n  }\n\n  removeGood(good) {\n    this.setState(({ selectedGoods }) => ({\n      selectedGoods: selectedGoods.filter(currentGood => (\n        currentGood !== good\n      )),\n    }));\n  }\n\n  render() {\n    const { selectedGoods } = this.state;\n    let message = 'No goods selected.';\n\n    if (selectedGoods.length === 1) {\n      message = `${selectedGoods[0]} is selected.`;\n    } else if (selectedGoods.length > 1) {\n      const lastElement = selectedGoods[selectedGoods.length - 1];\n      const mainPartOfMessage = selectedGoods\n        .slice(0, selectedGoods.length - 1)\n        .join(', ');\n\n      message = `${mainPartOfMessage} and ${lastElement} are selected.`;\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>{`Selected good: -${message}`}</h1>\n        <button\n          type=\"button\"\n          className=\"App__button\"\n          onClick={() => {\n            this.setState({ selectedGoods: [] });\n          }}\n        >\n          X\n        </button>\n        <ul className=\"App__list\">\n          {goodsFromServer.map((good) => {\n            const isSelected = selectedGoods.some(currentGood => (\n              currentGood === good\n            ));\n\n            return (\n              <li key={Math.random()} className=\"App__item\">\n                <span\n                  className={\n                    classNames(\n                      'App__good', { 'App__good--selected': isSelected },\n                    )\n                  }\n                >\n                  {good}\n                </span>\n                {!isSelected\n                  ? (\n                    <button\n                      type=\"button\"\n                      className=\"App__button App__button--add\"\n                      onClick={() => {\n                        this.addGood(good);\n                      }}\n                    >\n                      Add\n                    </button>\n                  )\n                  : (\n                    <button\n                      type=\"button\"\n                      className=\"App__button\"\n                      onClick={() => {\n                        this.removeGood(good);\n                      }}\n                    >\n                      Remove\n                    </button>\n                  )}\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}